http://whitequark.org/blog/2012/10/02/parsing-ruby/
http://rewrite.rubyforge.org/
http://apidock.com/ruby/Ripper/sexp/class
http://weblog.raganwald.com/2008/06/macros-hygiene-and-call-by-name-in-ruby.html
https://github.com/seattlerb/ruby_parser
http://www.ruby-doc.org/stdlib-1.9.3/libdoc/ripper/rdoc/Ripper.html
http://www.rubyinside.com/using-ripper-to-see-how-ruby-is-parsing-your-code-5270.html
https://github.com/jimweirich/sorcerer
http://apidock.com/ruby/Ripper/sexp/class
http://www.ruby-doc.org/core-1.9.3/Binding.html
https://github.com/simplabs/melbourne
* at this point, thinking this is a bad idea, esp from raganwald post
** reasons, besides mentioned:
*** no good way to handle this
*** diminishing return value
**** macros aren't worth it with all the extra complication
* my problems with ruby
** really complicated for a relatively simple thing
*** really true?
*** compilcated object model
**** object models are bad / wrong (?)
* a way forward?
** reading a file/syntax returns a block
** blocks become the basic strucutural element
** brick instead of block as different name?
** macro processor:
*** read syntax / receive code
*** create a table of macros to rewrite
** what about 
